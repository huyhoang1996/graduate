# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-27 06:41
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
            ],
            options={
                'verbose_name': 'UserBases',
                'verbose_name_plural': 'UserBases',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('product_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Product code')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='name')),
                ('detail', models.CharField(blank=True, max_length=250, null=True, verbose_name='detail')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Carts')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedbacks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('detail', models.CharField(blank=True, max_length=255, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Customers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('codename', models.CharField(max_length=100, verbose_name='codename')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='content type')),
            ],
            options={
                'ordering': ('content_type__app_label', 'content_type__model', 'codename'),
                'verbose_name': 'GroupUserPermission',
                'verbose_name_plural': 'GroupUserPermission',
            },
            managers=[
                ('objects', django.contrib.auth.models.PermissionManager()),
            ],
        ),
        migrations.CreateModel(
            name='GroupUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, verbose_name='name')),
            ],
            options={
                'verbose_name': 'GroupUser',
                'verbose_name_plural': 'GroupUser',
            },
        ),
        migrations.CreateModel(
            name='OrderInfomations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('order_id', models.CharField(blank=True, max_length=30, verbose_name='name')),
                ('money', models.CharField(blank=True, max_length=250, null=True, verbose_name='detail')),
                ('status_payment', models.CharField(choices=[('payment_error', 'Payment Error'), ('pendding', 'Pendding'), ('done', 'Done')], default='Pendding', max_length=250, verbose_name='is_payment')),
                ('payment_method', models.CharField(blank=True, max_length=250, null=True, verbose_name='detail')),
                ('status_order', models.CharField(choices=[('cancel', 'Cancel'), ('payment_error', 'Payment Error'), ('create', 'Create'), ('shipping', 'Shipping'), ('done', 'Done')], default='Create', max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Customers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Owners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pictures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('image', models.ImageField(blank=True, max_length=1000, null=True, upload_to='Picture')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='name')),
                ('detail', models.CharField(blank=True, max_length=30, verbose_name='detail')),
                ('price', models.IntegerField(verbose_name='price')),
                ('tax', models.IntegerField(verbose_name='tax')),
                ('hit_count', models.BooleanField(default=True, verbose_name='hit_count')),
                ('expire_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('status', models.CharField(choices=[('coming_soon', 'coming soon'), ('still', 'still'), ('oversell', 'oversell')], default='still', max_length=255)),
                ('products', models.ManyToManyField(to='app.Categories')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShipInfomations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='phone')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('address', models.EmailField(max_length=254, unique=True, verbose_name='address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('orderInfomation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.OrderInfomations')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('name', models.CharField(blank=True, max_length=250, verbose_name='name')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='phone')),
                ('image', models.ImageField(blank=True, max_length=1000, null=True, upload_to='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('soft_delete', models.DateTimeField(editable=False, verbose_name='soft delete')),
                ('owners', models.ManyToManyField(to='app.Owners')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('name', models.CharField(blank=True, max_length=250, verbose_name='name')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='phone')),
                ('image', models.ImageField(blank=True, max_length=1000, null=True, upload_to='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('soft_delete', models.DateTimeField(editable=False, verbose_name='soft delete')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='products',
            name='stores',
            field=models.ManyToManyField(to='app.Stores'),
        ),
        migrations.AddField(
            model_name='products',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Suppliers'),
        ),
        migrations.AddField(
            model_name='pictures',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Products'),
        ),
        migrations.AddField(
            model_name='orderinfomations',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Stores'),
        ),
        migrations.AddField(
            model_name='groupuserpermissions',
            name='groupUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GroupUsers'),
        ),
        migrations.AddField(
            model_name='feedbacks',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Products'),
        ),
        migrations.AddField(
            model_name='feedbacks',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Stores'),
        ),
        migrations.AddField(
            model_name='carts',
            name='products',
            field=models.ManyToManyField(to='app.Products'),
        ),
        migrations.AddField(
            model_name='userbases',
            name='groupUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.GroupUsers'),
        ),
        migrations.AddField(
            model_name='userbases',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userbases',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='groupuserpermissions',
            unique_together=set([('content_type', 'codename')]),
        ),
    ]
